<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans

    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
">
    <!-- 获取配置资源 -->
    <context:property-placeholder location="classpath:mongo.properties"/>

    <mongo:mongo id="mongo" replica-set="${mongo.replicaSet}">
        <!--
           connections-per-host: 每个主机答应的连接数（每个主机的连接池大小），当连接池被用光时，会被阻塞住
           max-wait-time: 被阻塞线程从连接池获取连接的最长等待时间（ms）
           connect-timeout:在建立（打开）套接字连接时的超时时间（ms）
           socket-timeout:套接字超时时间;该值会被传递给Socket.setSoTimeout(int)
           slave-ok:指明是否答应驱动从次要节点或者奴隶节点读取数据
           -->
        <mongo:options
                connections-per-host="${mongo.connectionsPerHost}"
                threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                connect-timeout="${mongo.connectTimeout}"
                max-wait-time="${mongo.maxWaitTime}"
                socket-timeout="${mongo.socketTimeout}"
                slave-ok="true"
                write-number="${mongo.writeNumber}"
                write-timeout="${mongo.riteTimeout}"/>
    </mongo:mongo>
    <!-- 设置使用的数据库 名-->
    <mongo:db-factory dbname="deng" mongo-ref="mongo"/>
    <!-- mongodb的模板 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>

    <!--启动自增ID自动注入-->
    <bean id="saveMongoEventListener" class="com.iammybest.spring.mvc.mongo.SaveMongoEventListener"></bean>
</beans>