<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"-->
<!--       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"-->
<!--       xsi:schemaLocation="http://www.springframework.org/schema/beans-->
<!--  http://www.springframework.org/schema/beans/spring-beans.xsd-->
<!--  http://www.springframework.org/schema/aop-->
<!--  http://www.springframework.org/schema/aop/spring-aop-4.3.xsd-->
<!--  http://www.springframework.org/schema/tx-->
<!--  http://www.springframework.org/schema/tx/spring-tx-4.3.xsd-->
<!--  http://www.springframework.org/schema/context-->
<!--  http://www.springframework.org/schema/context/spring-context-4.3.xsd-->
<!--  ">-->

<!--    &lt;!&ndash; 自动扫描 &ndash;&gt;-->
<!--    &lt;!&ndash;<context:component-scan base-package="com.iammybest.spring.mybatis"/>&ndash;&gt;-->

<!--    &lt;!&ndash; 引入配置文件 &ndash;&gt;-->
<!--    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--        <property name="location" value="classpath:jdbc.properties"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash;DB连接池&ndash;&gt;-->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
<!--        &lt;!&ndash; 指定连接数据库的驱动&ndash;&gt;-->
<!--        <property name="driverClass" value="${jdbc.driverClassName}"/>-->
<!--        &lt;!&ndash; 指定连接数据库的URL&ndash;&gt;-->
<!--        <property name="jdbcUrl" value="${jdbc.url}"/>-->
<!--        &lt;!&ndash; 指定连接数据库的用户名&ndash;&gt;-->
<!--        <property name="user" value="${jdbc.username}"/>-->
<!--        &lt;!&ndash; 指定连接数据库的密码&ndash;&gt;-->
<!--        <property name="password" value="${jdbc.password}"/>-->
<!--        &lt;!&ndash; 指定连接池中保留的最大连接数. Default:15&ndash;&gt;-->
<!--        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>-->
<!--        &lt;!&ndash; 指定连接池中保留的最小连接数&ndash;&gt;-->
<!--        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>-->
<!--        &lt;!&ndash; 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3&ndash;&gt;-->
<!--        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>-->
<!--        &lt;!&ndash; 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0&ndash;&gt;-->
<!--        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>-->
<!--        &lt;!&ndash; 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3&ndash;&gt;-->
<!--        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>-->
<!--        &lt;!&ndash; JDBC的标准,用以控制数据源内加载的PreparedStatements数量。-->
<!--        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0&ndash;&gt;-->
<!--        <property name="maxStatements" value="${jdbc.maxStatements}"/>-->
<!--        &lt;!&ndash; 每60秒检查所有连接池中的空闲连接.Default:0 &ndash;&gt;-->
<!--        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>-->
<!--    </bean>-->

<!--    &lt;!&ndash; 使用annotation注解方式配置事务 &ndash;&gt;-->
<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->

<!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--        <property name="mapperLocations" value="classpath*:mapping/*Mapper.xml"></property>-->
<!--    </bean>-->

<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="com.iammybest.spring.mvc.dao" />-->
<!--        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
<!--    </bean>-->

<!--    &lt;!&ndash; 配置事务管理器 &ndash;&gt;-->
<!--    <bean id="transactionManager"-->
<!--          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--    </bean>-->

<!--    &lt;!&ndash; 注解方式配置事物 &ndash;&gt;-->
<!--    &lt;!&ndash; <tx:annotation-driven transaction-manager="transactionManager" /> &ndash;&gt;-->

<!--    &lt;!&ndash; 拦截器方式配置事物 &ndash;&gt;-->
<!--    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="insert*" propagation="REQUIRED" />-->
<!--            <tx:method name="update*" propagation="REQUIRED" />-->
<!--            <tx:method name="delete*" propagation="REQUIRED" />-->

<!--            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
<!--            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
<!--            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />-->

<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--    &lt;!&ndash; Spring aop事务管理 &ndash;&gt;-->
<!--    <aop:config>-->
<!--        <aop:pointcut id="transactionPointcut"-->
<!--                      expression="execution(* com.iammybest.spring.mvc..*Impl.*(..))" />-->
<!--        <aop:advisor pointcut-ref="transactionPointcut"-->
<!--                     advice-ref="transactionAdvice" />-->
<!--    </aop:config>-->

<!--</beans>-->